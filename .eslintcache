[{"/Users/niklasbratt/Documents/orion/trbok/src/index.js":"1","/Users/niklasbratt/Documents/orion/trbok/src/api/strava.js":"2","/Users/niklasbratt/Documents/orion/trbok/src/components/WeekDay.js":"3","/Users/niklasbratt/Documents/orion/trbok/src/components/Week.js":"4","/Users/niklasbratt/Documents/orion/trbok/src/components/Summary.js":"5","/Users/niklasbratt/Documents/orion/trbok/src/components/Month.js":"6","/Users/niklasbratt/Documents/orion/trbok/src/components/WeekEvent.js":"7","/Users/niklasbratt/Documents/orion/trbok/src/components/AppLoggedIn.js":"8","/Users/niklasbratt/Documents/orion/trbok/src/components/SignInSide.js":"9","/Users/niklasbratt/Documents/orion/trbok/src/components/App.js":"10","/Users/niklasbratt/Documents/orion/trbok/src/components/SignUp.js":"11"},{"size":165,"mtime":1610009092544,"results":"12","hashOfConfig":"13"},{"size":1302,"mtime":1609524521302,"results":"14","hashOfConfig":"13"},{"size":3995,"mtime":1609845724697,"results":"15","hashOfConfig":"13"},{"size":10299,"mtime":1609860787510,"results":"16","hashOfConfig":"13"},{"size":1709,"mtime":1609793683374,"results":"17","hashOfConfig":"13"},{"size":735,"mtime":1609757710661,"results":"18","hashOfConfig":"13"},{"size":15166,"mtime":1609859979638,"results":"19","hashOfConfig":"13"},{"size":6162,"mtime":1610006725130,"results":"20","hashOfConfig":"13"},{"size":4480,"mtime":1610009823312,"results":"21","hashOfConfig":"13"},{"size":3446,"mtime":1610009668930,"results":"22","hashOfConfig":"13"},{"size":5183,"mtime":1610014396996,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a4qwvx",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/niklasbratt/Documents/orion/trbok/src/index.js",[],"/Users/niklasbratt/Documents/orion/trbok/src/api/strava.js",["51","52"],"/Users/niklasbratt/Documents/orion/trbok/src/components/WeekDay.js",["53"],"import React, { Fragment } from 'react';\n\nimport WeekEvent from './WeekEvent';\n\nclass WeekDay extends React.Component {\n\n    render() {\n        const styles = {\n            cell: {\n                borderRight: '1px solid gray',\n                padding: '5px'\n            },\n            dateCell: {\n                borderRight: '1px solid gray',\n                padding: '5px',\n                width: '80px'\n            },\n            editCell: {\n                borderRight: '1px solid gray',\n                padding: '0',\n                width: '20px'\n            },\n            hiddenCell: {\n                borderRight: '1px solid gray',\n                padding: '0',\n                width: '20px'\n            }\n        };\n\n        if (this.props.events.length === 0) {\n            let eventData = {\n                key: 'empty_' + this.props.date,\n                dateRowSpan: 1,\n                date: this.props.date,\n                plannedIsHidden: this.props.plannedIsHidden,\n                name: 'Vila',\n                type: '',\n                distance: 0,\n                movingTime: 0,\n                title: '',\n                ol: 0,\n                night: 0,\n                quality: 0,\n                lsd: 0,\n                strength: 0,\n                alternative: 0,\n                forest: 0,\n                path: 0\n            };\n            return (\n                <WeekEvent eventData={eventData} key={'weekEvent_' + eventData.key} user={this.props.user} upDatePage={this.props.upDatePage}/>\n            )\n        } else {\n            let dayEvents = [];\n            let eventData = {\n                key: this.props.events[0]._id,\n                dateRowSpan: this.props.events.length,\n                date: this.props.date,\n                plannedIsHidden: this.props.plannedIsHidden,\n                name: this.props.events[0].name,\n                type: this.props.events[0].type,\n                distance: this.props.events[0].distance,\n                movingTime: this.props.events[0].movingTime,\n                title: this.props.events[0].title,\n                ol: this.props.events[0].ol,\n                night: this.props.events[0].night,\n                quality: this.props.events[0].quality,\n                lsd: this.props.events[0].lsd,\n                strength: this.props.events[0].strength,\n                alternative: this.props.events[0].alternative,\n                forest: this.props.events[0].forest,\n                path: this.props.events[0].path\n            };\n            dayEvents.push(<WeekEvent eventData={eventData} key={'weekEvent_' + eventData.key} user={this.props.user} upDatePage={this.props.upDatePage}/>);\n\n\n            for (let i = 1; i < this.props.events.length; i++) {\n                let eventData = {\n                    key: this.props.events[i]._id,\n                    dateRowSpan: 0,\n                    date: this.props.date,\n                    plannedIsHidden: this.props.plannedIsHidden,\n                    name: this.props.events[i].name,\n                    type: this.props.events[i].type,\n                    distance: this.props.events[i].distance,\n                    movingTime: this.props.events[i].movingTime,\n                    title: this.props.events[i].title,\n                    ol: this.props.events[i].ol,\n                    night: this.props.events[i].night,\n                    quality: this.props.events[i].quality,\n                    lsd: this.props.events[i].lsd,\n                    strength: this.props.events[i].strength,\n                    alternative: this.props.events[i].alternative,\n                    forest: this.props.events[i].forest,\n                    path: this.props.events[i].path\n                };\n                dayEvents.push(<WeekEvent eventData={eventData} key={'weekEvent_' + eventData.key} user={this.props.user} upDatePage={this.props.upDatePage}/>);\n            }\n            return <Fragment>{dayEvents}</Fragment>\n        }\n    }\n}\n\nexport default WeekDay;",["54","55"],"/Users/niklasbratt/Documents/orion/trbok/src/components/Week.js",[],"/Users/niklasbratt/Documents/orion/trbok/src/components/Summary.js",[],["56","57"],"/Users/niklasbratt/Documents/orion/trbok/src/components/Month.js",[],"/Users/niklasbratt/Documents/orion/trbok/src/components/WeekEvent.js",["58","59"],"import React from 'react';\nimport axios from 'axios';\n\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Checkbox from '@material-ui/core/Checkbox';\n//import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined';\nimport FitnessCenterOutlinedIcon from '@material-ui/icons/FitnessCenterOutlined';\nimport DirectionsBikeOutlinedIcon from '@material-ui/icons/DirectionsBikeOutlined';\nimport PoolIcon from '@material-ui/icons/Pool';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\nimport Icon from '@material-ui/core/Icon';\n\nmomentDurationFormatSetup(moment);\n\nfunction getDistance(distance) {\n    if (distance === 0) {\n        return \"\"\n    }\n    if (distance < 1000) {\n        return distance + \" m\"\n    }\n    return Math.round(distance*100/1000)/100 + \" km\";\n}\nfunction getTime(time) {\n    if (time === 0) {\n        return '';\n    }\n    return moment.duration(time, \"seconds\").format(\"H:mm\");\n}\nfunction getSeconds(time) {\n    let separator = '';\n    if (time.indexOf(':') > 0) {\n        separator = ':';\n    } else if (time.indexOf('.') > 0) {\n        separator = '.';\n    } else if (time.indexOf(',') > 0) {\n        separator = ',';\n    }\n    if (separator !== '') {\n        let parts = time.split(separator);\n        return parseInt(parts[0]) * 60 * 60 + parseInt(parts[1]) * 60;\n    } else {\n        return parseInt(time)*60;\n    }\n}\nfunction getTypeIcon(type) {\n    switch (type) {\n        case 'ol':\n            return <img src={process.env.PUBLIC_URL + '/olskarm.png'} alt=\"OL\" height={16} width={16} style={{border: \"solid black 1px\"}}/>\n        case 'night':\n            return <NightsStayIcon/>\n        case 'Run':\n            return <DirectionsRunOutlinedIcon/>\n        case 'WeightTraining':\n            return <FitnessCenterOutlinedIcon/>\n        case 'Workout':\n            return <AccessibilityNewIcon/>\n        case 'Ride':\n        case 'VirtualRide':\n            return <DirectionsBikeOutlinedIcon/>\n        case 'Swim':\n            return <PoolIcon/>\n        case 'Walk':\n            return <DirectionsWalkIcon/>\n        default:\n            return type;\n    }\n}\n\nclass WeekEvent extends React.Component {\n    state = { \n        isEditMode: false,\n        name: '',\n        movingTime: 0,\n        distance: 0,\n        type: '',\n        ol: false,\n        night: false,\n        quality: false,\n        lsd: false,\n        strength: false,\n        alternative: false,\n        forest: false,\n        path: false\n}\n\n    setEditMode = () => {\n        this.setState({name: this.props.eventData.name});\n        this.setState({isEditMode: true});\n    }\n    cancelEditMode = () => {\n        this.setState({isEditMode: false});\n    }\n    saveEvent = async () => {\n        if (this.props.eventData.key.startsWith('empty_')) {\n            // New event\n            const event = {\n                date: this.props.eventData.date,\n                user: this.props.user,\n                name: this.state.name,\n                distance: 0,\n                movingTime: 0,\n                ol: 0,\n                night: 0,\n                quality: 0,\n                lsd: 0,\n                strength: 0,\n                alternative: 0,\n                forest: 0,\n                path: 0\n            }\n            const url = 'http://localhost:3333/api/v1/activities';\n            await axios.post(url, event);\n        } else {\n            // Existing event\n            const ol = this.state.type === 'ol'|| this.state.type === 'night' ? 1 : this.state.ol;\n            const night = this.state.type === 'night' ? 1 : this.state.night;\n            const event = {\n                _id: this.props.eventData.key,\n                date: this.props.eventData.date,\n                user: this.props.user,\n                name: this.state.name,\n                distance: this.state.distance * 1000,\n                movingTime: getSeconds(this.state.movingTime),\n                type: this.state.type,\n                ol: ol,\n                night: night,\n                quality: this.state.quality,\n                lsd: this.state.lsd,\n                strength: this.state.strength,\n                alternative: this.state.alternative,\n                forest: this.state.forest,\n                path: this.state.path               \n            }\n            const url = 'http://localhost:3333/api/v1/activities';\n            await axios.patch(url, event);\n        }\n        this.setState({isEditMode: false});\n        this.props.upDatePage();\n    }\n\n    componentDidMount() {\n        this.setState({movingTime: getTime(this.props.eventData.movingTime)});\n        this.setState({distance: Math.round(this.props.eventData.distance*100/1000)/100});\n        this.setState({type: this.props.eventData.type});\n        this.setState({ol: this.props.eventData.ol === 1 ? true : false});\n        this.setState({night: this.props.eventData.night === 1 ? true : false});\n        this.setState({quality: this.props.eventData.quality === 1 ? true : false});\n        this.setState({lsd: this.props.eventData.lsd === 1 ? true : false});\n        this.setState({strength: this.props.eventData.strength === 1 ? true : false});\n        this.setState({alternative: this.props.eventData.alternative === 1 ? true : false});\n        this.setState({forest: this.props.eventData.forest === 1 ? true : false});\n        this.setState({path: this.props.eventData.path === 1 ? true : false});\n    }\n    render() {\n        const styles = {\n            cell: {\n                borderRight: '1px solid gray',\n                padding: '5px'\n            },\n            smallCell: {\n                borderRight: '1px solid gray',\n                padding: '2px',\n                width: '30px'\n            },\n            dataCell: {\n                borderRight: '1px solid gray',\n                padding: '5px',\n                width: '80px'\n            },\n            dateCell: {\n                borderRight: '1px solid gray',\n                padding: '5px',\n                width: '80px'\n            },\n            editCell: {\n                borderRight: '1px solid gray',\n                padding: '0',\n                width: '20px'\n            },\n            hiddenCell: {\n                borderRight: '1px solid gray',\n                padding: '0',\n                width: '20px'\n            },\n            checkbox: {\n                width: '16px',\n                height: '16px'\n            }\n        };\n\n        return (\n            <TableRow key={this.props.eventData.key}>\n                {!this.state.isEditMode && <TableCell style={styles.editCell} align=\"center\">\n                        <MoreHorizIcon onClick={this.setEditMode}/>\n                    </TableCell>}\n                {this.state.isEditMode && <TableCell style={styles.editCell} align=\"center\">\n                        <DoneIcon onClick={this.saveEvent}/>\n                        <RevertIcon onClick={this.cancelEditMode}/>\n                    </TableCell>}\n\n                {this.props.eventData.dateRowSpan > 0 && <TableCell rowSpan={this.props.eventData.dateRowSpan} style={styles.dateCell} align=\"left\">\n                    {this.props.eventData.date}</TableCell>}\n\n                {this.props.eventData.plannedIsHidden && <TableCell style={styles.hiddenCell}></TableCell>}\n                {!this.props.eventData.plannedIsHidden && <TableCell colSpan=\"4\" style={styles.cell}>&nbsp;</TableCell>}\n\n                {!this.state.isEditMode && <TableCell style={styles.cell}>{this.props.eventData.name}</TableCell>}\n                {!this.state.isEditMode && <TableCell align=\"center\" style={styles.cell}>{getTypeIcon(this.props.eventData.type)}</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.ol === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.ol === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.night === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.night === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.quality === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.quality === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.lsd === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.lsd === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.strength === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.strength === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.alternative === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.alternative === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.forest === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.forest === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.path === 1) && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={true} disabled style={styles.checkbox}/></TableCell>}\n                {(!this.state.isEditMode && this.props.eventData.path === 0) && <TableCell align=\"center\" style={styles.smallCell}>&nbsp;</TableCell>}\n                {!this.state.isEditMode && <TableCell align=\"right\" style={styles.cell}>{getDistance(this.props.eventData.distance)}</TableCell>}\n                {!this.state.isEditMode && <TableCell align=\"right\" style={styles.cell}>{getTime(this.props.eventData.movingTime)}</TableCell>}\n                \n                {this.state.isEditMode && <TableCell style={styles.cell}><TextField variant=\"outlined\" multiline={true} fullWidth={true} rows={3} value={this.state.name} onChange={(e) => this.setState({ name: e.target.value })} name=\"nameField\"/></TableCell>}\n                {this.state.isEditMode && <TableCell style={styles.cell}><Select defaultValue={this.props.eventData.type} onChange={(e) => this.setState({ type: e.target.value })}><MenuItem value=\"ol\"><img src={process.env.PUBLIC_URL + '/olskarm.png'} alt=\"OL\" height={16} width={16}/><span>OL</span></MenuItem><MenuItem value=\"night\"><NightsStayIcon/><span>Natt-OL</span></MenuItem><MenuItem value=\"Run\"><DirectionsRunOutlinedIcon/><span>Löpning</span></MenuItem><MenuItem value=\"Ride\"><DirectionsBikeOutlinedIcon/><span>Cykel</span></MenuItem><MenuItem value=\"VirtualRide\"><DirectionsBikeOutlinedIcon/><span>Cykel inne</span></MenuItem><MenuItem value=\"WeightTraining\"><FitnessCenterOutlinedIcon/><span>Styrketräning</span></MenuItem><MenuItem value=\"Swim\"><PoolIcon/><span>Simning</span></MenuItem><MenuItem value=\"Workout\"><AccessibilityNewIcon/><span>Annat</span></MenuItem><MenuItem value=\"Walk\"><DirectionsWalkIcon/><span>Gång</span></MenuItem></Select></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.ol} onChange={(e) => this.setState({ ol: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.night} onChange={(e) => this.setState({ night: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.quality} onChange={(e) => this.setState({ quality: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.lsd} onChange={(e) => this.setState({ lsd: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.strength} onChange={(e) => this.setState({ strength: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.alternative} onChange={(e) => this.setState({ alternative: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.forest} onChange={(e) => this.setState({ forest: e.target.checked })} style={styles.checkbox}/></TableCell>}\n                {this.state.isEditMode && <TableCell align=\"center\" style={styles.smallCell}><Checkbox checked={this.state.path} onChange={(e) => this.setState({ path: e.target.checked })} style={styles.checkbox}/></TableCell>}\n\n                {this.state.isEditMode && <TableCell style={styles.dataCell}><TextField variant=\"outlined\" fullWidth={true} value={this.state.distance} onChange={(e) => this.setState({ distance: e.target.value })}/></TableCell>}\n                {this.state.isEditMode && <TableCell style={styles.dataCell}><TextField variant=\"outlined\" fullWidth={true} value={this.state.movingTime} onChange={(e) => this.setState({ movingTime: e.target.value })}/></TableCell>}\n            </TableRow>\n        );\n    }\n}\n\nexport default WeekEvent;\n","/Users/niklasbratt/Documents/orion/trbok/src/components/AppLoggedIn.js",[],["60","61"],"/Users/niklasbratt/Documents/orion/trbok/src/components/SignInSide.js",["62"],"/Users/niklasbratt/Documents/orion/trbok/src/components/App.js",["63","64","65"],"/Users/niklasbratt/Documents/orion/trbok/src/components/SignUp.js",[],{"ruleId":"66","severity":1,"message":"67","line":8,"column":9,"nodeType":"68","messageId":"69","endLine":8,"endColumn":20},{"ruleId":"66","severity":1,"message":"70","line":11,"column":9,"nodeType":"68","messageId":"69","endLine":11,"endColumn":23},{"ruleId":"66","severity":1,"message":"71","line":8,"column":15,"nodeType":"68","messageId":"69","endLine":8,"endColumn":21},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"66","severity":1,"message":"78","line":22,"column":8,"nodeType":"68","messageId":"69","endLine":22,"endColumn":16},{"ruleId":"66","severity":1,"message":"79","line":25,"column":8,"nodeType":"68","messageId":"69","endLine":25,"endColumn":12},{"ruleId":"72","replacedBy":"80"},{"ruleId":"74","replacedBy":"81"},{"ruleId":"66","severity":1,"message":"82","line":68,"column":33,"nodeType":"68","messageId":"69","endLine":68,"endColumn":43},{"ruleId":"66","severity":1,"message":"83","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"84","line":2,"column":50,"nodeType":"68","messageId":"69","endLine":2,"endColumn":54},{"ruleId":"85","severity":2,"message":"86","line":70,"column":70,"nodeType":"68","messageId":"87","endLine":70,"endColumn":76},"no-unused-vars","'callRefresh' is assigned a value but never used.","Identifier","unusedVar","'callActivities' is assigned a value but never used.","'styles' is assigned a value but never used.","no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"'EditIcon' is defined but never used.","'Icon' is defined but never used.",["88"],["89"],"'rememberMe' is assigned a value but never used.","'Component' is defined but never used.","'Link' is defined but never used.","no-undef","'SignUp' is not defined.","undef","no-global-assign","no-unsafe-negation"]